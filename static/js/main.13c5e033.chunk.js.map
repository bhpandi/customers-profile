{"version":3,"sources":["components/Profile.jsx","components/home.jsx","utils/Api.js","App.js","serviceWorker.js","index.js"],"names":["TabPane","Tabs","Panel","Collapse","Profile","state","current","tab","handlePage","page","_this","setState","onTabChange","key","console","log","_this2","this","_this$props$orderDeta","props","orderDetails","about","address","company","email","phone","_this$props$orderDeta2","name","first","last","registered","orders","paginfInfo","indexOfLastTodo","OrderList","currentList","indexOfFirstTodo","slice","totalList","length","react_default","a","createElement","tabs","defaultActiveKey","animated","onChange","icon","type","collapse","header","avatar","shape","size","className","concat","row","gutter","col","span","map","item","src","product","picture","title","alt","price","orderStatus","id","orderDate","replace","description","parseInt","pagination","total","Component","Header","Layout","Content","Footer","Home","layout","style","components_Profile","textAlign","searchApi","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","response","body","wrap","_context","prev","next","fetch","sent","json","status","Error","message","abrupt","stop","apply","arguments","App","then","searchResults","catch","err","keys","home","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.13c5e033.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Tabs, Icon, Collapse, Row, Col, Avatar, Pagination } from \"antd\";\nconst TabPane = Tabs.TabPane;\nconst Panel = Collapse.Panel;\nclass Profile extends Component {\n  state = {\n    current: 1,\n    tab: 1\n  };\n  handlePage = page => {\n    this.setState({\n      current: page\n    });\n  };\n  onTabChange = key => {\n    console.log(key);\n    this.setState({\n      tab: key\n    });\n  };\n  render() {\n    const {\n      about,\n      address,\n      company,\n      email,\n      phone,\n      name: { first, last },\n      registered,\n      orders\n    } = this.props.orderDetails;\n\n    const paging = 4;\n\n    const paginfInfo = {\n      indexOfLastTodo: this.state.current * paging,\n      OrderList: orders,\n      get currentList() {\n        const indexOfFirstTodo = this.indexOfLastTodo - paging;\n        return this.OrderList.slice(indexOfFirstTodo, this.indexOfLastTodo);\n      },\n      get totalList() {\n        return this.OrderList.length;\n      }\n    };\n    const { currentList, totalList } = paginfInfo;\n    return (\n      <div>\n        <Tabs defaultActiveKey=\"1\" animated={false} onChange={this.onTabChange}>\n          <TabPane\n            tab={\n              <span>\n                <Icon type=\"user\" />\n                My Account\n              </span>\n            }\n            key=\"1\"\n            animated={false}\n          >\n            <Collapse defaultActiveKey={[]}>\n              <Panel\n                header={\n                  <div>\n                    <Avatar shape=\"square\" size={64} icon=\"user\" />\n                    <span className=\"avatar-name\">\n                      <strong>{`${first} ${last}`}</strong>\n                    </span>\n                  </div>\n                }\n                key=\"1\"\n              >\n                <Row gutter={16} className=\"user-profile\">\n                  <Col span={24}>\n                    <p>\n                      <label>\n                        <strong>Name:</strong>\n                      </label>\n                      <span>{`${first} ${last}`}</span>\n                    </p>\n                    <p>\n                      <label>\n                        <strong>Email:</strong>\n                      </label>\n                      <span>{email}</span>\n                    </p>\n                    <p>\n                      <label>\n                        <strong>Phone:</strong>\n                      </label>\n                      <span>{phone}</span>\n                    </p>\n                    <p>\n                      <label>\n                        <strong>Registered On:</strong>\n                      </label>\n                      <span>{registered}</span>\n                    </p>\n                    <p>\n                      <label>\n                        <strong>Company:</strong>\n                      </label>\n                      <span>{company}</span>\n                    </p>\n                    <p>\n                      <label>\n                        <strong>Address:</strong>\n                      </label>\n                      <span>{address}</span>\n                    </p>\n                    <p>\n                      <label>\n                        <strong>About:</strong>\n                      </label>\n                      <span>{about}</span>\n                    </p>\n                  </Col>\n                </Row>\n              </Panel>\n            </Collapse>\n          </TabPane>\n          <TabPane\n            tab={\n              <span>\n                <Icon type=\"shopping\" />\n                Orders\n              </span>\n            }\n            key=\"2\"\n          >\n            <Collapse defaultActiveKey={[]} className=\"order-tab\">\n              {currentList.map(item => (\n                <Panel\n                  header={\n                    <div>\n                      <Row gutter={16} className=\"expand-collopse\">\n                        <Col span={8}>\n                          <img\n                            src={item.product.picture}\n                            title={item.product.name}\n                            alt={item.product.name}\n                          />\n                          <span>\n                            <strong>{item.product.name}</strong> <br />\n                          </span>\n                        </Col>\n                        <Col span={8} className=\"flex-container\">\n                          <span>\n                            <strong>{item.price}</strong>\n                          </span>\n                        </Col>\n                        <Col span={8} className=\"flex-container\">\n                          <span>\n                            <strong>{item.product.orderStatus}</strong>\n                          </span>\n                        </Col>\n\n                        <Row>\n                          <Col span={24} className=\"order-id\">\n                            Order # <strong>{item.id}</strong>\n                            <br />\n                            <em>\n                              Orderd On:\n                              {item.product.orderDate.replace(\"GMT+0000\", \"\")}\n                            </em>\n                          </Col>\n                        </Row>\n                      </Row>\n                    </div>\n                  }\n                  key={item.id}\n                >\n                  <Row gutter={16}>\n                    <Col span={24}>\n                      <p>{item.product.description}</p> <br />\n                    </Col>\n                  </Row>\n                </Panel>\n              ))}\n            </Collapse>\n          </TabPane>\n        </Tabs>\n        {parseInt(this.state.tab) === 2 && (\n          <Pagination\n            current={this.state.current}\n            onChange={page => this.handlePage(page)}\n            total={totalList}\n          />\n        )}\n      </div>\n    );\n  }\n}\nexport default Profile;\n","import React from \"react\";\nimport Profile from \"./Profile\";\nimport { Layout } from \"antd\";\nconst { Header, Content, Footer } = Layout;\n\nconst Home = props => {\n  return (\n    <Layout className=\"layout\">\n      <Header>\n        <div className=\"logo\" />\n      </Header>\n      <Content>\n        <div className=\"profile-container\" style={{}}>\n          <Profile orderDetails={props.orderDetails} />\n        </div>\n      </Content>\n      <Footer style={{ textAlign: \"center\" }}>\n        E-commerce customer portal ©2018 Created by Bharath\n      </Footer>\n    </Layout>\n  );\n};\n\nexport default Home;\n","const searchApi = async () => {\n  const response = await fetch(\"/default/testOrder\");\n  const body = await response.json();\n  if (response.status !== 200) throw Error(body.message);\n  return body;\n};\nexport default searchApi;\n","import React, { Component } from \"react\";\nimport Home from \"./components/home\";\nimport searchApi from \"./utils/Api\";\nimport \"./css/App.scss\";\n\nclass App extends Component {\n  state = {\n    orderDetails: {}\n  };\n\n  componentDidMount() {\n    searchApi()\n      .then(searchResults =>\n        this.setState({\n          orderDetails: searchResults\n        })\n      )\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    return Object.keys(this.state.orderDetails).length ? (\n      <Home {...this.state} />\n    ) : (\n      <div> Loading ... </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}